name: Build and deploy to Google Compute Engine

on:
  push:
    branches:
      - master

env:
  GCE_INSTANCE: bot-instance-1
  GCE_INSTANCE_ZONE: us-east1-b

jobs:
  build-publish-deploy:
    name: Push Docker image and deploy to GCE
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Production

      - name: Publish to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/theta-bot
          tags: latest

      # GitHub Packages doesn't support pulling public images without authentication
      # so we are publishing to Docker Hub for now so the GCE container can access it
      - name: Publish to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}
          tags: latest

      - name: Set up gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}

      - name: Deploy to GCE
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "docker.io/$GITHUB_REPOSITORY:latest" \
            --container-env="TOKEN=${{ secrets.DISCORD_TOKEN }},GIT_COMMIT_SHA=${{ github.sha	}}"

      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@releases/v1
        if: success()
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        uses: chrnorm/deployment-status@releases/v1
        if: failure()
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
